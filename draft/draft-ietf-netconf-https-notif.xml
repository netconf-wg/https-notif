<?xml version="1.0" encoding="US-ASCII"?>
<rfc
    category="std"
    docName="draft-ietf-netconf-https-notif-latest"
    submissionType="IETF"
    consensus="true"
    ipr="trust200902">
  <?rfc toc="yes"?>

  <front>
    <title abbrev="HTTPS Notification Transport">An HTTPS-based Transport for YANG Notifications</title>

    <author fullname="Mahesh Jethanandani" initials="M." surname="Jethanandani">
      <organization>Kloud Services</organization>
      <address>
        <email>mjethanandani@gmail.com</email>
      </address>
    </author>

    <author fullname="Kent Watsen" initials="K." surname="Watsen">
      <organization>Watsen Networks</organization>
      <address>
        <email>kent+ietf@watsen.net</email>
      </address>
    </author>

    <date/>
    <area>Operations</area>
    <workgroup>NETCONF</workgroup>
    <keyword>http</keyword>
    <keyword>yang</keyword>
    <keyword>notification</keyword>

    <abstract>
      <t>This document defines a protocol for sending asynchronous
      event notifications similar to notifications defined in RFC
      5277, but over HTTPS. YANG modules for configuring publishers
      are also defined.  Examples are provided illustrating how to
      configure various publishers.
      </t>
      <t>This document requires that the publisher is a "server" (e.g.,
        a NETCONF or RESTCONF server), but does not assume that the
        receiver is a server.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>This document defines a protocol for sending asynchronous
      event notifications similar to notifications defined in <xref
      target="RFC5277">NETCONF Event Notifications</xref>, but over
      HTTPS. Using HTTPS, which is a secure form of <xref
      target="RFC9110">HTTP Semantics</xref>, maximizes
      transport-level interoperability, while allowing for a variety
      of encoding options. The protocol supports <xref
      target="RFC7230">Hypertext Transfer Protocol (HTTP/1.1): Message
      Syntax and Routing</xref> and, <xref
      target="RFC9113">HTTP/2</xref>. While the payload does not
      change between these versions of HTTP and <xref
      target="RFC9114">HTTP/3</xref>, the underlying transport
      does. Since NETCONF does not support <xref
      target="RFC9000">QUIC: A UDP-Based Multiplexed and Secure
      Transport</xref>, support for <xref target="RFC9114">
      HTTP/3</xref>, is considered out of scope of this document.</t>
      
      <t>This document defines support for JSON and XML; future 
      efforts may define support for other encodings 
      (e.g., binary). This document requires that the publisher is a
      "server" (e.g., a NETCONF or RESTCONF server), but does not 
      assume that the receiver is a NETCONF or RESTCONF server. 
      It does expect the receiver to be an HTTPS server to receive
      the notifications.</t>

      <t>This document also defines two <xref target="RFC7950">YANG
      1.1</xref> modules that extend the data model defined in <xref
      target="RFC8639">Subscription to YANG Notifications</xref>,
      enabling the configuration of HTTPS-based receivers.</t>

      <t>An example module illustrating the configuration of a
      publisher not using the data model defined in RFC 8639 is also
      provided.</t>

      <t>Configured subscriptions enable a server (e.g., a NETCONF or
      RESTCONF server), acting as a publisher of notifications, to
      proactively push notifications to external receivers without the
      receivers needing to first connect to the server, as is the case
      with dynamic subscriptions.</t>

      <section title="Applicability Statement">
        <t>While the YANG modules have been defined as an augmentation of
        <xref target="RFC8639">Subscription to YANG Notifications</xref>, the
        notification method defined in this document MAY be used outside of
        <xref target="RFC8639">Subscription to YANG Notifications</xref> by
        using some of the definitions from this module along with the grouping
        defined in <xref
        target="I-D.ietf-netconf-http-client-server">Groupings for HTTP
        Clients and Servers</xref>. For an example on how that can be done,
        see Section A.2.</t>
      </section>

      <section title="Note to RFC Editor">
        <t>This document uses several placeholder values throughout the
          document. Please replace them as follows and remove this section
          before publication.</t>
        <t>RFC XXXX, where XXXX is the number assigned to this document at the
          time of publication.</t>
        <t>RFC YYYY, where YYYY is the number assigned to
        <xref target="I-D.ietf-netconf-http-client-server"/>.</t>
        <t>YYYY-MM-DD with the actual date of the publication of this document.</t>
      </section>

      <section title="Abbreviations">
        <texttable>
          <ttcol>Acronym</ttcol>
          <ttcol>Expansion</ttcol>
          <c>HTTP</c>
          <c>Hypertext Transfer Protocol</c>
          <c>HTTPS</c>
          <c>Hypertext Transfer Protocol Secure</c>
	  <c>SSE</c>
	  <c>Server-Sent Events</c>
          <c>TCP</c>
          <c>Transmission Control Protocol</c>
          <c>TLS</c>
          <c>Transport Layer Security</c>
        </texttable>
      </section>

      <section title="Terminology">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described in BCP
        14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only
        when, they appear in all capitals, as shown here.</t>

        <section title="Terms Imported from other RFCs">
          <t>The following terms are defined in <xref
          target="RFC8639">Subscription to YANG Notifications</xref>.
	  <list style="symbols">
	    <t>Publisher</t>
	    <t>Receiver</t>
	    <t>Subscribed Notifications</t>
          </list>
	  </t>
	  <t>The following term is defined in <xref
	  target="RFC8040">RESTCONF Protocol</xref>.
	  <list style="symbols">
	    <t>target resource</t>
	  </list>
	  </t>
        </section>
      </section>
      <section anchor="tree-diagram" title="Tree Diagram">
        <t>
	  The tree diagram for the YANG modules defined in this
	  document use annotations defined in <xref
	  target="RFC8340">YANG Tree Diagrams.</xref>.
	</t>
      </section>
    </section>

    <section title="Overview of Publisher to Receiver Interaction" anchor="overview">
      <t>The protocol consists of two HTTP-based target resources
      presented by the receiver.  These two resources share a common
      prefix that the publisher learns from a request it issues, as
      defined in section 3.2. If the data model in section 6.2 is
      used, this common prefix is defined by the "path" leaf in the
      "http-client-parameters" container.

      <list style="symbols">
	<t>"capabilities":  A target resource enabling the publisher
	to discover what optional capabilities a receiver supports.
	Publishers SHOULD query this target before sending any
	notifications or if ever an error occurs.</t>

	<t>"relay-notification":  A target resource enabling the publisher
	to send one or more notification to a receiver.  This document
	defines support for sending only one notification per message; a
	future effort MAY extend the protocol to send multiple
	notifications per message.</t>
      </list>
      </t>
      <t>The protocol is illustrated in the diagram below:</t>
      <t>
        <figure>
          <artwork><![CDATA[
          -------------                      --------------
          | Publisher |                      | Receiver   |
          -------------                      --------------

     Send HTTPS GET message    ------>
     to discover receiver's
     capabilities

                               <------    Send 200 (OK) containing
                                          capabilities supported
                                          by the receiver      


+-- For Each Notification ------------------ ---------------------+
|                                                                 |
|    Send HTTPS POST message   ------>                            |
|    with YANG defined                                            |
|    notification                                                 |
|                                                                 |
|                              <------    Send 204 (No Content)   |
+-----------------------------------------------------------------+]]></artwork>
        </figure>
      </t>
      <t>Note that, for RFC 8639 configured subscriptions, the very first
        notification must be the "subscription-started" notification.</t>
    </section>

    <section title="Discovering a Receiver's Capabilities">
      <section title="Applicability">
        <t>For publishers using <xref target="RFC8639">Subscription to YANG
          Notifications</xref>, dynamic discovery of a receiver's supported
          encoding is necessary only when the "/subscriptions/subscription/encoding"
          leaf is not configured, per the "encoding" leaf's description statement
          in the "ietf-subscribed-notification" module.
	</t>
      </section>
      <section title="Request">
        <t>To learn the capabilities of a receiver, a publisher can issue an
          HTTPS GET request to the "capabilities" resource (see <xref target= "overview"/>) on
          the receiver with "Accept" header set using the "application/xml"
          and/or "application/json" media-types.</t>
      </section>
      <section title="Response">
        <t>The receiver responds with a "200 (OK)" message, having the
          "Content-Type" header set to either "application/xml" or
          "application/json" (which ever was selected), and containing
          in the response body a list of the receiver's capabilities
          encoded in the selected format.</t>
        <t>Even though a YANG module is not defined for this interaction,
          the response body MUST conform to the following YANG-modeled
          format:</t>
        <t>
          <figure>
            <artwork>container receiver-capabilities {
  description
    "A container for a list of capabilities supported by
     the receiver.";
  leaf-list receiver-capability {
    type "inet:uri";
    description
      "A capability supported by the receiver.  A partial list of
       capabilities is defined in the 'Capabilities for HTTPS
       Notification Receivers' registry (see RFC XXXX). Additional
       custom capabilities MAY be defined.";
  }
}
            </artwork>
          </figure>
        </t>
	<t>As it is possible that the receiver may return custom capability
	URIs, the publisher MUST ignore any capabilities that it does not
	recognize.
	</t>
      </section>
      <section title="Example">
        <t>The publisher can send the following request to learn the
        receiver capabilities. In this example, the "Accept" states
        that the publisher wants to receive the capabilities response
        in XML but, if not supported, then in JSON.</t>
        <t>
          <figure>
            <artwork><![CDATA[GET /some/path/capabilities HTTP/1.1
Host: example.com
Accept: application/xml, application/json;q=0.5]]></artwork>
          </figure>
        </t>
        <t>If the receiver is able to reply using "application/xml", and
        assuming it is able to receive JSON and XML encoded notifications,
	and it is able to process the RFC 8639 state machine, the
        response might look like this:</t>
        <t>
          <figure>
            <artwork><![CDATA[HTTP/1.1 200 OK
Date: Wed, 26 Feb 2020 20:33:30 GMT
Server: example-server
Cache-Control: no-cache
Content-Type: application/xml

<receiver-capabilities>
  <receiver-capability>\
    urn:ietf:capability:https-notif-receiver:encoding:json\
  </receiver-capability>
  <receiver-capability>\
    urn:ietf:capability:https-notif-receiver:encoding:xml\
  </receiver-capability>
  <receiver-capability>\
    urn:ietf:capability:https-notif-receiver:sub-notif\
  </receiver-capability>
</receiver-capabilities>]]></artwork>
          </figure>
        </t>
        <t>If the receiver is unable to reply using "application/xml", the
        response might look like this:</t>
        <t>
          <figure>
            <artwork><![CDATA[HTTP/1.1 200 OK
Date: Wed, 26 Feb 2020 20:33:30 GMT
Server: example-server
Cache-Control: no-cache
Content-Type: application/json
Content-Length: nnn

{
   "receiver-capabilities": {
     "receiver-capability": [
       "urn:ietf:capability:https-notif-receiver:encoding:json",
       "urn:ietf:capability:https-notif-receiver:encoding:xml",
       "urn:ietf:capability:https-notif-receiver:sub-notif"
     ]
   }
}]]></artwork>
          </figure>
        </t>
      </section>
    </section>

    <section title="Sending Event Notifications"> 
      <section title="Request">
        <t>
	  The publisher sends an HTTP POST request to the
	  "relay-notification" resource (see <xref target=
	  "overview"/>) on the receiver with the "Content-Type" header
	  set to either "application/json" or "application/xml" and a
	  body containing the notification encoded using the specified
	  format.
	</t>
        <t>XML-encoded notifications are encoded using the format defined
          by <xref target="RFC5277">NETCONF Event Notifications</xref>
          for XML.</t>
        <t>JSON-encoded notifications are encoded the same as specified
          in Section 6.4 in <xref target="RFC8040">RESTCONF</xref> with
          the following deviations:
          <list style="symbols">
            <t>
	    The notifications do not contain the "data:" prefix used
	    by Server-Sent Events (SSE).
	    </t>
            <t>Instead of saying that, for JSON-encoding purposes, the
            module name for the "notification" element is
            "ietf-restconf", the module name will instead be
            "ietf-https-notif".</t>
          </list>
        </t>
      </section>
      <section title="Response">
        <t>
	  The response on success SHOULD be "204 (No Content)". In
	  case of corrupted or malformed event, the response SHOULD be
	  an appropriate HTTP error response.
	</t>
      </section>
      <section title="Example">
        <t>An XML-encoded notification might be sent as follows:</t>
        <t>
          <figure>
            <artwork><![CDATA[POST /some/path/relay-notification HTTP/1.1
Host: example.com
Content-Type: application/xml

<notification xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0">
  <eventTime>2019-03-22T12:35:00Z</eventTime>
  <event xmlns="https://example.com/example-mod">
    <event-class>fault</event-class>
    <reporting-entity>
      <card>Ethernet0</card>
    </reporting-entity>
    <severity>major</severity>
  </event>
</notification>]]></artwork>
          </figure>
        </t>
        <t>A JSON-encoded notification might be sent as follows:</t>
        <t><figure>
            <artwork><![CDATA[POST /some/path/relay-notification HTTP/1.1
Host: example.com
Content-Type: application/json

{
  "ietf-https-notif:notification": {
    "eventTime": "2013-12-21T00:01:00Z",
    "example-mod:event" : {
      "event-class" : "fault",
      "reporting-entity" : { "card" : "Ethernet0" },
      "severity" : "major"
    }
  }
}]]></artwork>
          </figure>
        </t>

        <t>And, in either case, the response on success might be as
        follows:</t>
        <t>
          <figure>
            <artwork><![CDATA[HTTP/1.1 204 No Content
Date: Wed, 26 Feb 2020 20:33:30 GMT
Server: example-server]]></artwork>
          </figure>
        </t>
      </section>
    </section>

    <section title='The "ietf-subscribed-notif-receivers" Module'>
      <section title="Data Model Overview">
        <t>This YANG module augments the "ietf-subscribed-notifications" module to
        define a choice of transport types that other modules such as the
        "ietf-https-notif-transport" module can use to define a transport specific
        receiver.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../bin/ietf-subscribed-notif-receivers@YYYY-MM-DD-tree.txt,69)
]]></artwork>
          </figure>
        </t>
      </section>
      <section title="YANG Module">
        <t>The YANG module imports <xref target="RFC8639">Subscription to YANG Notifications</xref>.</t>
        <t>
          <figure>
            <artwork><![CDATA[
<CODE BEGINS> file "ietf-subscribed-notif-receivers@YYYY-MM-DD.yang"
INSERT_TEXT_FROM_FILE(../bin/ietf-subscribed-notif-receivers@YYYY-MM-DD.yang,69)
<CODE ENDS>
]]></artwork>
          </figure>
        </t>
      </section>
    </section>

    <section title='The "ietf-https-notif-transport" Module'>
      <section title="Data Model Overview">
        <t>This YANG module is a definition of a set of receivers that are
          interested in the notifications published by the publisher. The module
          contains the TCP, TLS and HTTPS parameters that are needed to
          communicate with the receiver. The module augments the
          "ietf-subscribed-notif-receivers" module to define a transport specific
          receiver. </t>
        <t>As mentioned earlier, it uses a POST method to deliver the
          notification. The "http-receiver/tls/http-client-parameters/path" leaf
          defines the path for the resource on the receiver, as defined by
          "path-absolute" in <xref target="RFC3986">URI Generic Syntax</xref>.
          The user-id used by <xref target="RFC8341">Network Configuration Access
          Control Model</xref>, is that of the receiver and is derived from the
          certificate presented by the receiver as part of "receiver-identity".</t>
        <t>An abridged tree diagram representing the module is shown
          below.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../bin/ietf-https-notif-transport@YYYY-MM-DD-sub-tree.txt,69)
]]></artwork>
          </figure>
        </t>
      </section>

      <section title="YANG module">
        <t>The YANG module imports 
        <xref target="RFC7407">A YANG Data Model for SNMP Configuration</xref>,
        <xref target="RFC8639">Subscription to YANG Notifications</xref>,
          <!--<xref target="I-D.ietf-subscribed-notif-receivers">An HTTPS-based Transport for Configured Subscriptions</xref>,-->
        and <xref target="I-D.ietf-netconf-http-client-server">YANG Groupings for HTTP Clients and HTTP Servers</xref>.</t>

        <t>The YANG module is shown below.</t>

        <t>
          <figure>
            <artwork><![CDATA[
<CODE BEGINS> file "ietf-https-notif-transport@YYYY-MM-DD.yang"
INSERT_TEXT_FROM_FILE(../bin/ietf-https-notif-transport@YYYY-MM-DD.yang,69)
<CODE ENDS>
]]></artwork>
          </figure>
        </t>
      </section>
    </section>

    <section title="Security Considerations">
      <t>The YANG modules specified in this document define a schema
      for data that is designed to be accessed via network management
      protocols such as <xref target="RFC6241">NETCONF</xref> or <xref
      target="RFC8040">RESTCONF</xref>. The lowest NETCONF layer is
      the secure transport layer, and the mandatory-to-implement
      secure transport is <xref target="RFC6242">Secure Shell
      (SSH)</xref>. The lowest RESTCONF layer is HTTPS, and the
      mandatory-to-implement secure transport is <xref
      target="RFC8446">TLS</xref>. The <xref target="RFC8341">NETCONF
      Access Control Model (NACM) </xref> provides the means to
      restrict access for particular NETCONF or RESTCONF users to a
      preconfigured subset of all available NETCONF or RESTCONF
      protocol operations and content.</t>

      <t>The YANG modules in this document make use of grouping that
      are defined in <xref
      target="I-D.ietf-netconf-http-client-server">YANG Groupings for
      HTTP Clients and HTTP Servers</xref>, and <xref
      target="RFC7407">A YANG Data Model for SNMP
      Configuration</xref>. Please see the Security Considerations
      section of those documents for considerations related to
      sensitivity and vulnerability of the data nodes defined in
      them.</t>

      <t>There are a number of data nodes defined in the YANG modules
      that are writable/creatable/deletable (i.e., config true, which
      is the default).  These data nodes may be considered sensitive
      or vulnerable in some network environments. Write operations
      (e.g., edit-config) to these data nodes without proper
      protection can have a negative effect on network
      operations. These are the subtrees and data nodes and their
      sensitivity/vulnerability:</t>

      <t>
        <list style="symbols">
          <t>The "path" node in "ietf-subscribed-notif-receivers"
          module can be modified by a malicious user to point to an
          invalid URI.</t>
        </list>
	<list>
	  <t>The container "receiver-identity" contains nodes like
	  "cert-maps" that are used by the HTTP server to map to the
	  HTTPS client's certificate to a 'local' username. An
	  unintended modification of these nodes will result in new
	  connection requests be denied.</t>
	</list>
      </t>

      <t>Some of the readable data nodes in the YANG modules may be
      considered sensitive or vulnerable in some network
      environments. It is thus important to control read access (e.g.,
      via get, get-config, or notification) to these data nodes. The
      model does not define any readable subtrees and data nodes that
      are particularly sensitive or vulnerable.</t>

      <t>Some of the RPC operations in the YANG modules may be
      considered sensitive or vulnerable in some network
      environments. It is thus important to control access to these
      operations. The model does not define any RPC operations.</t>
    </section>

    <section title="IANA Considerations">
      <section title='The "IETF XML" Registry'>
        <t>This document registers two URIs in the "ns" subregistry
          of the "IETF XML" registry <xref target="RFC3688"/>.  Following
          the format in <xref target="RFC3688"/>, the following
          registrations are requested:</t>
        <t>
          <figure>
            <artwork>
URI: urn:ietf:params:xml:ns:yang:ietf-subscribed-notif-receivers
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.

URI: urn:ietf:params:xml:ns:yang:ietf-https-notif-transport
Registrant Contact: The IESG
XML: N/A, the requested URI is an XML namespace.
</artwork>
          </figure>
        </t>
      </section>
      <section title='The "YANG Module Names" Registry'>
        <t>This document registers two YANG modules in the
          "YANG Module Names" registry <xref target="RFC6020"/>.
          Following the format in <xref target="RFC6020"/>, the
          following registrations are requested:</t>
        <t>
          <figure>
            <artwork>
name:      ietf-subscribed-notif-receivers
namespace: urn:ietf:params:xml:ns:yang:ietf-subscribed-notif-receivers
prefix:    snr
reference: RFC XXXX

name:      ietf-https-notif-transport
namespace: urn:ietf:params:xml:ns:yang:ietf-https-notif-transport
prefix:    hnt
reference: RFC XXXX
</artwork>
          </figure>
        </t>
      </section>

      <section title="Registration of 'yang-notif' URN Sub-namespace">
        <t>
        This document requests that IANA register a new URN Sub-namespace within the
         "IETF URN Sub-namespace for Registered Protocol Parameter Identifiers"
         registry defined in <xref target="RFC3553"/>.
        </t>
        <t>
          <figure>
            <artwork>
Registry Name: yang-notif
Specification: RFC XXXX
Repository: "YANG Notifications" registry
            </artwork>
          </figure>
        </t>
      </section>
      <section title="Registration of 'https' URN Sub-namespace">
        <t>
        This document requests that IANA register a new URN Sub-namespace within the
         "YANG Notifications" registry group defined in <xref target="RFC3553"/>.
        </t>
        <t>
          <figure>
            <artwork>
Registry Name: https-capability
Specification: RFC XXXX
Repository: "Capabilities for HTTPS Notification Receivers" registry
            </artwork>
          </figure>
        </t>
        <t>The following note shall be at the top of the registry:</t>
        <t>
          <figure>
            <artwork>This registry defines capabilities that can be
supported by HTTPS-based notification receivers.
            </artwork>
          </figure>
        </t>
        <t>The fields for each registry are:
          <list style="symbols">
            <t>URN
              <list style="symbols">
                <t>The name of the URN (required).</t>
                <t>The URN must conform to the syntax described by <xref target="RFC8141"/>.</t>
                <t>The URN must begin with the string "urn:ietf:params:yang-notif:https-capability".</t>
              </list>
            </t>
            <t>Reference
              <list style="symbols">
                <t>The RFC that defined the URN.</t>
                <t>The RFC must be in the form "RFC &lt;Number&gt;: &lt;Title&gt;.</t>
              </list>
            </t>
            <t>Description
              <list style="symbols">
                <t>An arbitrary description of the capability.</t>
                <t>The description should be no more than a few sentences.</t>
                <t>The description is to be in English, but may contain
                  UTF-8 characters as may be needed in some cases.</t>
              </list>
            </t>
          </list>
        </t>

        <t>The update policy is "Specification Required".  Updates do not
        require an expert review by a Designated Expert.
        </t>
        <t>Following is the initial assignment for this registry:</t>
        <t>
          <figure>
            <artwork>
Record:
   URN:         urn:ietf:params:yang-notif:https-capability:encoding:json
   Reference:   RFC XXXX:An HTTPS-based Transport for YANG Notifications
   Description: Identifies support for JSON-encoded notifications.

Record:
   URN:         urn:ietf:params:yang-notif:https-capability:encoding:xml
   Reference:   RFC XXXX:An HTTPS-based Transport for YANG Notifications
   Description: Identifies support for XML-encoded notifications.

Record:
   URN:         urn:ietf:params:yang-notif:https-capability:sub-notif
   Reference:   RFC XXXX:An HTTPS-based Transport for YANG Notifications
   Description: Identifies support for state machine described in
                RFC 8639, enabling the publisher to send, e.g., the
                "subscription-started" notification.
            </artwork>
          </figure>
        </t>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative references">
      <?rfc include='reference.RFC.2119.xml'?>
      <?rfc include='reference.RFC.3553.xml'?>
      <?rfc include='reference.RFC.3688.xml'?>
      <?rfc include='reference.RFC.3986.xml'?>
      <?rfc include='reference.RFC.5277.xml'?>
      <?rfc include='reference.RFC.6020.xml'?>
      <?rfc include='reference.RFC.6241.xml'?>
      <?rfc include='reference.RFC.6242.xml'?>
      <?rfc include='reference.RFC.7230.xml'?>
      <?rfc include='reference.RFC.7407.xml'?>
      <?rfc include='reference.RFC.7950.xml'?>
      <?rfc include='reference.RFC.8040.xml'?>
      <?rfc include='reference.RFC.8174.xml'?>
      <?rfc include='reference.RFC.8340.xml'?>
      <?rfc include='reference.RFC.8341.xml'?>
      <?rfc include='reference.RFC.8446.xml'?>
      <?rfc include='reference.RFC.8639.xml'?>
      <?rfc include='reference.RFC.9000.xml'?>
      <?rfc include='reference.RFC.9110.xml'?>
      <?rfc include='reference.RFC.9113.xml'?>
      <?rfc include='reference.RFC.9114.xml'?>
      <?rfc include='reference.I-D.ietf-netconf-http-client-server.xml'?>
    </references>
    <references title="Informative references">
      <?rfc include='reference.RFC.8141.xml'?>
    </references>

    <section title="Configuration Examples">
      <t>This non-normative section shows two examples for how the "ietf-https-notif-transport"
        module can be used to configure a publisher to send notifications to
        a receiver.</t>

      <t>In both examples, the publisher, being an HTTPS client, is
      configured to send notifications to a receiver.</t>

      <section title="Using Subscribed Notifications (RFC 8639)">
        <t>This example shows how an <xref target="RFC8639">RFC 8639</xref>
          based publisher can be configured to send notifications to a
          receiver.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../src/yang/example-https-notif-7.1.xml,69)
]]></artwork>
          </figure>
        </t>
      </section>

      <section title="Not Using Subscribed Notifications">
        <t>In the case that it is desired to use HTTPS-based
        notifications outside of Subscribed Notifications, an
        application-specific module would need to define the
        configuration for sending the notification.</t>
        <t>Following is an example module.  Note that the module
        "uses" the "https-receiver-grouping" grouping from the
        "ietf-https-notif-transport" module.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../bin/example-custom-module@YYYY-MM-DD.yang,69)
]]></artwork>
          </figure>
        </t>
        <t>Following is what the corresponding configuration looks like:</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../src/yang/example-custom-https-notif.xml,69)
]]></artwork>
          </figure>
        </t>
      </section>
    </section>

    <section title="Acknowledgements" numbered="no">
      <t>The authors would like to thank for following for
      lively discussions on list and in the halls (ordered
      by first name):
        Eric Voit,
        Henning Rogge,
        Martin Bjorklund,
        Reshad Rahman,
        and Rob Wilton.
      </t>
      <t>In addition, the authors would also like to thank Quifang Ma
      for providing thoughtful comments as part of shepherd
      writeup.</t>
    </section>
  </back>
</rfc>
